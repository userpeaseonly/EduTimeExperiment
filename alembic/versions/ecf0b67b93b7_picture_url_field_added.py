"""picture url field added

Revision ID: ecf0b67b93b7
Revises: f9ac5fcd622e
Create Date: 2025-06-17 03:08:20.213942

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ecf0b67b93b7'
down_revision: Union[str, None] = 'f9ac5fcd622e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_events_attendance_status'), table_name='events')
    op.drop_index(op.f('ix_events_date_time'), table_name='events')
    op.drop_index(op.f('ix_events_device_id'), table_name='events')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_index(op.f('ix_events_person_id'), table_name='events')
    op.drop_index(op.f('ix_events_person_name'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_heartbeats_date_time'), table_name='heartbeats')
    op.drop_index(op.f('ix_heartbeats_device_id'), table_name='heartbeats')
    op.drop_index(op.f('ix_heartbeats_id'), table_name='heartbeats')
    op.drop_table('heartbeats')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('heartbeats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('active_post_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_state', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('device_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('heartbeats_pkey'))
    )
    op.create_index(op.f('ix_heartbeats_id'), 'heartbeats', ['id'], unique=False)
    op.create_index(op.f('ix_heartbeats_device_id'), 'heartbeats', ['device_id'], unique=False)
    op.create_index(op.f('ix_heartbeats_date_time'), 'heartbeats', ['date_time'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('event_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_state', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('device_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('current_verify_mode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('attendance_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('active_post_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('major_event', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('minor_event', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('serial_no', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('verify_no', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('person_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zone_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('swipe_card_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_no', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('card_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('current_event', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('front_serial_no', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pictures_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mask', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('person_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('purpose', postgresql.ENUM('att', 'info', name='person_purpose_enum'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('events_pkey'))
    )
    op.create_index(op.f('ix_events_person_name'), 'events', ['person_name'], unique=False)
    op.create_index(op.f('ix_events_person_id'), 'events', ['person_id'], unique=False)
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_index(op.f('ix_events_device_id'), 'events', ['device_id'], unique=False)
    op.create_index(op.f('ix_events_date_time'), 'events', ['date_time'], unique=False)
    op.create_index(op.f('ix_events_attendance_status'), 'events', ['attendance_status'], unique=False)
    # ### end Alembic commands ###
